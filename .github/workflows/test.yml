#===============================================================================
# Copyright 2024 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#===============================================================================

name: test
on:
  workflow_dispatch:

permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref_name }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

env:
  DPCTL_VERSION: 0.18.1
  DPNP_VERSION: 0.16.0
  DPCTL_PY_VERSIONS: '3.9\|3.11'

jobs:
  sklearn_lnx:
    strategy:
      fail-fast: false
      matrix:
        include:
          - PYTHON_VERSION: "3.10"
            SKLEARN_VERSION: "1.2"
    name: LinuxNightly/pip Python${{ matrix.PYTHON_VERSION }}_Sklearn${{ matrix.SKLEARN_VERSION }}
    runs-on: ubuntu-24.04
    timeout-minutes: 120

    steps:
      - name: Checkout Scikit-learn-intelex
        uses: actions/checkout@v4
      - name: Get run ID of "CI" workflow
        id: get-run-id
        run: |
          OTHER_REPO="icfaust/scikit-learn-intelex"
          WF_NAME="CI"
          JQ_QUERY='map(select(.event == "workflow_dispatch" or .event == "schedule")) | .[0].databaseId'
          RUN_ID=`gh run --repo ${OTHER_REPO} list --workflow "${WF_NAME}" --json databaseId,event --status success --jq "${JQ_QUERY}"`
          echo "Detected latest run id of ${RUN_ID} for workflow ${WF_NAME}"
          echo "run-id=${RUN_ID}" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: coverage
          github-token: ${{ github.token }}
          run-id: ${{ steps.get-run-id.outputs.run-id }}
          merge-multiple: true
      - name: Install dependencies
        run: |
         curl -Os https://cli.codecov.io/latest/linux/codecov
         chmod +x codecov
      - name: Upload to codecov
        run: |
         export CODECOV_NAME=CI-${{ github.event.number }}-${{ github.sha }}
         ./codecov --verbose upload-process --fail-on-error -t ${{ secrets.CODECOV_TOKEN }} -n "${CODECOV_NAME}" -F github -s ./coverage
